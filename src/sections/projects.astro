---
import { getCollection } from 'astro:content'
import Heading from '../components/heading.astro'
import Project from '../components/project.astro'

const projects = (await getCollection('projects')).sort(
  (a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
)
---

<section id='projects' class='section'>
  <div class='max-w-[65rem] flex flex-col gap-24'>
    <Heading title='Projects' />

    <div id='project-list' class='flex flex-col gap-24'>
      {projects.map((project, index) => <Project {...project} index={index} />)}
    </div>
  </div>
</section>

<script>
  const projectList = document.getElementById('project-list')!

  projectList.addEventListener('click', (e) => {
    const target = e.target as HTMLElement | null

    if (!target) return

    if (target.matches('.drawer-trigger') || target?.parentElement?.matches('.drawer-trigger')) {
      const parentProject = target.closest('.project') as HTMLElement
      const drawer = parentProject.querySelector('.drawer') as HTMLElement
      const readingProgressBar = parentProject.querySelector('.reading-progress-bar') as HTMLElement
      const readmeContent = parentProject.querySelector('.readme-content') as HTMLElement
      const drawerTrigger = parentProject.querySelector('.drawer-trigger') as HTMLElement

      if (
        target.classList.contains('drawer-trigger') ||
        target.parentElement?.classList.contains('drawer-trigger')
      ) {
        toggleDrawer()
      }

      function toggleDrawer() {
        drawer.classList.toggle('open')
        drawerTrigger.classList.toggle('open')
        toggleProgressBarListener()
      }

      function toggleProgressBarListener() {
        if (drawer.classList.contains('open')) {
          readmeContent.addEventListener('scroll', trackReadingProgress)
        } else {
          readmeContent.removeEventListener('scroll', trackReadingProgress)
        }
      }

      function trackReadingProgress() {
        const totalHeight = readmeContent.scrollHeight - readmeContent.clientHeight
        const progress = (readmeContent.scrollTop / totalHeight) * 100
        readingProgressBar.style.width = `${progress}%`
      }
    }
  })
</script>
